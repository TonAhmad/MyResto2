
@model List<MyResto2.Controllers.Product>

@{
    ViewBag.Title = "Menu";
    Layout = "~/Views/Layout/HomeLayout.cshtml";
}

<div class="container mt-5">
    <div class="row mb-4">
        <div class="col-12 text-center">
            <h2 class="section-title">Our Menu</h2>
            <p class="text-muted">Discover our delicious selection of food and beverages</p>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-12 d-flex justify-content-center flex-wrap">
            @if (ViewBag.Categories != null)
            {
                <a href="#all" class="btn btn-outline-primary mx-1 category-btn">
                    <i class="fas fa-th-list me-1"></i> All
                </a>
                foreach (var category in ViewBag.Categories)
                {
                    <a href="#cat@(category.categoryID)" class="btn btn-outline-primary mx-1 category-btn">
                        <i class="fas fa-tag me-1"></i> @category.categoryName
                    </a>
                }
            }
        </div>
    </div>

    <div class="menu-container">
        <!-- Left Side: Product List -->
        <div class="product-container">
            @if (Model != null && Model.Any())
            {
                foreach (var product in Model)
                {
                    <div id="cat@(product.categoryID)" class="product-card @(product.stock == 0 ? "out-of-stock" : "")">
                        <!-- Product Image -->
                        <div class="product-image">
                            <img src="@Url.Content(product.imagePath)" alt="@product.productName">
                        </div>

                        <!-- Product Details -->
                        <div class="product-details">
                            <h5 class="product-title">@product.productName</h5>
                            <p class="product-category">
                                <i class="fas fa-tag me-1"></i> @product.Category.categoryName
                            </p>
                            <p class="product-price">
                                <i class="fas fa-money-bill-wave me-1"></i> Rp @string.Format("{0:N0}", product.price)
                            </p>
                            <p class="product-stock">
                                <i class="fas fa-cubes me-1"></i> Stok: @product.stock
                            </p>

                            <button class="btn btn-primary add-to-cart"
                                    onclick="addToCart('@product.productID', '@product.productName', @product.price)"
                                    @(product.stock == 0 ? "disabled" : "")>
                                <i class="fas fa-cart-plus me-1"></i> Tambah ke Keranjang
                            </button>

                            @if (product.stock == 0)
                            {
                                <span class="badge bg-danger ms-2">Stok Habis</span>
                            }
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i> Tidak ada produk yang tersedia saat ini.
                </div>
            }
        </div>

        <!-- Right Side: Cart -->
        <div class="cart-container">
            <h4><i class="fas fa-shopping-cart me-2"></i> Keranjang Anda</h4>
            <div id="cartItems" class="mb-3">
                <!-- Cart items will be populated by JavaScript -->
                <div class="text-center text-muted py-3">
                    <i class="fas fa-shopping-basket fa-2x mb-2"></i>
                    <p>Keranjang belanja kosong</p>
                </div>
            </div>
            <div class="d-flex justify-content-between align-items-center py-3 border-top">
                <span class="fw-bold">Total:</span>
                <span class="fw-bold text-warning fs-5">Rp <span id="totalPrice">0</span></span>
            </div>
            <!-- Checkout Button -->
            <div class="d-grid gap-2 mt-3">
                <button id="btnCheckout" class="btn btn-success" onclick="saveCartAndRedirect(); return false;">
                    <i class="fas fa-check-circle me-1"></i> Checkout
                </button>
                <button class="btn btn-outline-secondary" onclick="clearCart(); return false;">
                    <i class="fas fa-trash me-1"></i> Kosongkan Keranjang
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
    let cart = {};

    function addToCart(productID, productName, price) {
        console.log("Checking stock for product:", productID); // Debug log

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetProductStock", "Cust")",
            data: JSON.stringify({ productID: productID }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                console.log("Stock received:", response); // Debug log
                let stock = response; // Pastikan ini adalah angka
                let currentQuantity = cart[productID] ? cart[productID].quantity : 0;

                if (stock > 0 && currentQuantity < stock) {
                    // Jika produk sudah ada di cart, tambahkan jumlahnya
                    if (cart[productID]) {
                        cart[productID].quantity += 1;
                    } else {
                        cart[productID] = {
                            name: productName,
                            price: price,
                            quantity: 1
                        };
                    }
                    updateCart();
                    console.log("Product added to cart:", cart);
                } else {
                    alert("Stok tidak mencukupi!");

                    // **Tambahan: Ubah tampilan jika stok sudah habis**
                    updateProductStatus(productID, 0);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error fetching stock:", xhr.responseText);
            }
        });
    }

    function updateProductStatus(productID, stock) {
        if (stock === 0) {
            let productCard = document.querySelector(`#cat${productID} .product-card`);
            let button = document.querySelector(`#cat${productID} .add-to-cart`);

            if (productCard) productCard.classList.add("out-of-stock");
            if (button) {
                button.disabled = true;
                button.style.backgroundColor = "#ccc";
                button.style.cursor = "not-allowed";
            }
        }
    }

    function updateCart() {
        let cartContainer = document.getElementById("cartItems");
        let totalPriceElement = document.getElementById("totalPrice");
        cartContainer.innerHTML = "";
        let total = 0;

        for (let id in cart) {
            let item = cart[id];
            let itemTotal = item.price * item.quantity;
            total += itemTotal;

            cartContainer.innerHTML += `
            <div class="cart-item">
                <span>${item.name} - Rp ${itemTotal.toLocaleString()}</span>
                <button onclick="decreaseQuantity('${id}')">-</button>
                <span>${item.quantity}</span>
                <button onclick="increaseQuantity('${id}')">+</button>
            </div>
        `;
        }

        totalPriceElement.innerText = total.toLocaleString();
    }

    function increaseQuantity(productID) {
        cart[productID].quantity += 1;
        updateCart();
    }

    function decreaseQuantity(productID) {
        if (cart[productID].quantity > 1) {
            cart[productID].quantity -= 1;
        } else {
            delete cart[productID];
        }
        updateCart();
    }

    function saveCartAndRedirect() {
        let cartArray = Object.keys(cart).map(id => ({
            productID: id,
            name: cart[id].name,
            price: cart[id].price,
            quantity: cart[id].quantity
        }));

        localStorage.setItem("cart", JSON.stringify(cartArray));
        window.location.href = "@Url.Action("Checkout", "Cust")";
    }
    </script>
}

